import java.util.List;

public class Statistics {
	private List<Car> carList;
	private double overallTime;
	private String direction;
	
	public Statistics(String direction,List<Car> carList,double overallTime) {
		this.direction=direction;
		this.carList=carList;
		this.overallTime=overallTime;	
	}
	
	/**
	 * count the number of the car traveling through the grid generated by the generator
	 * @return
	 */
	public int getNumber() {
		int count=0;
		for(Car car:getCarList()) {
			if(car.isOnGrid()==false) {
				count++;
			}
		}
		return count;
	}
	
	/**
	 * get the maximum time for each generator
	 * @return
	 */
	public double getMaxTime() {
		double maxTime=0;
		for(Car car:getCarList()) {
			if(car.getGridTime()>=maxTime) {
				maxTime=car.getGridTime();
			}
		}
		return maxTime;
	}
	
	/**
	 * get the minimum time for each generator
	 * @return
	 */
	public double getMinTime() {
		double minTime=getMaxTime();
		for(Car car:getCarList()) {
			if(car.isOnGrid()==false&&car.getGridTime()<=minTime) {
				minTime=car.getGridTime();
			}
		}
		return minTime;
	}
	
	/**
	 * get the mean time for each generator
	 * @return meantime(remain two decimals)
	 */
	public double getMeanTime() {
		double meanTime=getOverallTime()/getNumber();
		return Double.parseDouble(String.format("%.2f", meanTime));
	}
	
	/**
	 * get the variance time for each generator
	 * @return variance time(remain two decimals)
	 */
	public double getVarianceTime() {
		double meanTime=getMeanTime();
		double sum=0;
		for(Car car:getCarList()) {
			if(car.isOnGrid()==false) {
				sum+=Math.pow(car.getGridTime()-meanTime,2);
			}
		}
		double varianceTime=sum/getNumber();	
		return Double.parseDouble(String.format("%.2f", varianceTime));
	}
	
	/**
	 * method to print the report 
	 */
	public void report() {
		System.out.println(direction+" Generator Overall Time: "+getOverallTime());
		System.out.println("Max Time: "+getMaxTime());
		System.out.println("Min Time: "+getMinTime());
		System.out.println("Mean Time: "+getMeanTime());
		System.out.println("Variance Time: "+getVarianceTime());
		System.out.println("------------------------------------");
	}

	public List<Car> getCarList() {
		return carList;
	}


	public void setCarList(List<Car> carList) {
		this.carList = carList;
	}


	public double getOverallTime() {
		return overallTime;
	}

	public void setOverallTime(double overallTime) {
		this.overallTime = overallTime;
	}
}
